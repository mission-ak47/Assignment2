/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package person_ui;

import java.awt.CardLayout;
import javax.swing.InputVerifier;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.City;
import model.Community;
import model.House;
import model.Person;
import model.Person_Directory;
import model.Numeric_Verifier;
import model.String_Verifier;
/**
 *
 * @author Guest123
 */
public class Create_PersonJPanel extends javax.swing.JPanel {

    /**
     * Creates new form Create_PersonJPanel
     */
    
    private Person_Directory person_Directory;
    private JPanel userAccessArea;
    
    public Create_PersonJPanel(JPanel userAccessArea,Person_Directory person_Directory) {
        initComponents();
        this.userAccessArea = userAccessArea;
        this.person_Directory = person_Directory;
        addVerifiers();
    }
    
    private void addVerifiers() {
        InputVerifier integerVerifier = new Numeric_Verifier();
        txtPerson_Age.setInputVerifier(integerVerifier);
        InputVerifier stringVerifier = new String_Verifier();
        txtPerson_Name.setInputVerifier(stringVerifier);
        txtHouse.setInputVerifier(stringVerifier);
        txtCommunity.setInputVerifier(stringVerifier);
        txtCity.setInputVerifier(stringVerifier);
    }
    
    private void clearFields()
    {
        txtPerson_Name.setText("");
        txtPerson_Age.setText("");
        txtHouse.setText("");
        txtCommunity.setText("");
        txtCity.setText("");
    }
    private Boolean checkBlankInput()
    {
        if(txtPerson_Name.getText().length()==0
                ||txtPerson_Age.getText().length()==0
                ||txtCity.getText().length()==0
                ||txtHouse.getText().length()==0
                ||txtCommunity.getText().length()==0)
        {
            return false;
        }
        else{
            return true;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnBack1 = new javax.swing.JButton();
        lblPerson_Name = new javax.swing.JLabel();
        txtPerson_Name = new javax.swing.JTextField();
        txtPerson_Age = new javax.swing.JTextField();
        lblPerson_Age = new javax.swing.JLabel();
        txtHouse = new javax.swing.JTextField();
        lblHouse = new javax.swing.JLabel();
        txtCommunity = new javax.swing.JTextField();
        lblCommunity = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        lblCity = new javax.swing.JLabel();
        btnAdd_Person = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Person.png"))); // NOI18N

        setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Person Details");

        btnBack1.setText("Back");
        btnBack1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });

        lblPerson_Name.setText("Person Name");

        txtPerson_Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPerson_NameActionPerformed(evt);
            }
        });

        txtPerson_Age.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPerson_AgeActionPerformed(evt);
            }
        });

        lblPerson_Age.setText("Person Age");

        txtHouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHouseActionPerformed(evt);
            }
        });

        lblHouse.setText("House");

        txtCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCommunityActionPerformed(evt);
            }
        });

        lblCommunity.setText("Community");

        txtCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCityActionPerformed(evt);
            }
        });

        lblCity.setText("City");

        btnAdd_Person.setText("Add Person");
        btnAdd_Person.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdd_Person.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdd_PersonActionPerformed(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Person.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblHouse)
                                .addGap(37, 37, 37))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblCity)
                                .addGap(49, 49, 49))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblCommunity)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblPerson_Age)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblPerson_Name)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(txtPerson_Name, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPerson_Age, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(btnAdd_Person, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(btnBack1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPerson_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPerson_Name))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPerson_Age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPerson_Age))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblHouse, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtHouse, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCommunity))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCity)))
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd_Person)
                    .addComponent(btnBack1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userAccessArea.remove(this);
        CardLayout layout = (CardLayout) userAccessArea.getLayout();
        layout.previous(userAccessArea);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        // TODO add your handling code here:
        userAccessArea.remove(this);
        CardLayout layout = (CardLayout) userAccessArea.getLayout();
        layout.previous(userAccessArea);
    }//GEN-LAST:event_btnBack1ActionPerformed

    private void txtPerson_NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPerson_NameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPerson_NameActionPerformed

    private void txtPerson_AgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPerson_AgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPerson_AgeActionPerformed

    private void txtHouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHouseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHouseActionPerformed

    private void txtCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCommunityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCommunityActionPerformed

    private void txtCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCityActionPerformed

    private void btnAdd_PersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdd_PersonActionPerformed
        // TODO add your handling code here:
        
        // Validation for Person's Name 
        if(txtPerson_Name.getText().equals("")) {
            JOptionPane.showMessageDialog(null,"Person Name cannot be empty.");
            return;
        }
        if(!isAlpha(txtPerson_Name.getText())) {
            JOptionPane.showMessageDialog(this,"Please enter a valid name!");
            return;
        }
        
        //Validation for Age
        if(txtPerson_Age.getText().equals("")) {
            JOptionPane.showMessageDialog(this,"Person's Age field cannot be empty.");
            return;
        }
        if(!isNum(txtPerson_Age.getText())) {
            JOptionPane.showMessageDialog(this,"Please enter an valid Age.");
            return;
        }
        if(Integer.parseInt(txtPerson_Age.getText()) < 0 || Integer.parseInt(txtPerson_Age.getText()) > 100) {
            JOptionPane.showMessageDialog(null,"Please enter age between 1 and 100!");
            return;
        }
        
        // Validation for House
        if(txtHouse.getText().equals("")) {
            JOptionPane.showMessageDialog(null,"House cannot be empty.");
            return;
        }
        
        // Validation for Community Name 
        if(txtCommunity.getText().equals("")) {
            JOptionPane.showMessageDialog(null,"Community Name cannot be empty.");
            return;
        }
        if(!isAlpha(txtCommunity.getText())) {
            JOptionPane.showMessageDialog(this,"Please enter a valid Community name!");
            return;
        }
        
        // Validation for City Name 
        if(txtCity.getText().equals("")) {
            JOptionPane.showMessageDialog(null,"City Name cannot be empty.");
            return;
        }
        if(!isAlpha(txtCity.getText())) {
            JOptionPane.showMessageDialog(this,"Please enter a valid City name!");
            return;
        }
        
        if (checkBlankInput()==Boolean.TRUE)
        {
            Person person=person_Directory.createAndAddPerson();
            House house = new House();
            Community community = new Community();
            City city = new City();
            person.setPerson_Name(txtPerson_Name.getText());
            person.setPerson_Age(Integer.parseInt(txtPerson_Age.getText()));
            //            person.setCity(personCityJTextField1.getText());
            //            person.setHouse(personHouseJTextField2.getText());
            //            person.setCommunity(personCommunityJTextField3.getText());
            community.setCommunity_Name(txtCommunity.getText());
            house.setPatient_Address(txtHouse.getText());
            city.setName(txtCity.getText());
            person.setCity(city);
            person.setHouse(house);
            person.setCommunity(community);

            JOptionPane.showMessageDialog(this, "Person added!!", "Update",
                JOptionPane.INFORMATION_MESSAGE);
            clearFields();
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Please enter all values",
                "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnAdd_PersonActionPerformed

    private boolean isAlpha(String s) {
        char[] ch = s.toCharArray();
        for(char c: ch){
            if (!Character.isLetter(c))
                return false;
        }
        return true;
    }
    
    private boolean isNum(String s) {
        char[] ch = s.toCharArray();
        for(char c: ch){
            if (!Character.isDigit(c))
                return false;
        }
        return true;
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd_Person;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBack1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblHouse;
    private javax.swing.JLabel lblPerson_Age;
    private javax.swing.JLabel lblPerson_Name;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCommunity;
    private javax.swing.JTextField txtHouse;
    private javax.swing.JTextField txtPerson_Age;
    private javax.swing.JTextField txtPerson_Name;
    // End of variables declaration//GEN-END:variables
}
